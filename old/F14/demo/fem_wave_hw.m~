% demo of the finite element method for the problem d2u/dt2 - d2u/d2x = 0
% with zero Dirichlet boundary conditions 

N = 63; % num interior points
h = 1/(N+1);
x = [1:N+1]*h; 

% construct the stiffness matrix (integrals done by hand)
k1 = 1; k2 = 1;
maindiag = 2*ones(N+1,1);
maindiag(1:31) = maindiag(1:31)*k1;
maindiag(1:31) = maindiag(1:31)*k1;
maindiag(32) = k1+k2;
offdiag  = -k1*(x(2:end) < .5) - k2*(x(2:end)>.5);
K = diag(maindiag) + diag(offdiag,1) + diag(offdiag,-1);
K(N+1,N) = -k2;K(N,N+1) = -k2;
K(N+1,N+1) = 1*k2;
K = K/h;

% construct mass matrix
k1 = .5;
k2 = 1;
maindiag = 2*h/3*((k1*(x < .5) + k2 * (x > .4999)));
maindiag(round(N/2)) = h/3*(k1+k2);
offdiag  = (h/6)*(k1*(x(2:end) < .5) + k2*(x(2:end)>.4999));
% maindiag = 2*h/3*ones(N+1,1);
% offdiag  = h/6*ones(N,1);
M = diag(maindiag) + diag(offdiag,1) + diag(offdiag,-1);
M(N+1,N+1) = M(N+1,N+1)/2;

% u = 5*(1-x).^4.*x; 
u = x(:).*exp(-(x(:)).^2*100);
u = u(:);

plot([0;x(:)],[0;u],'.-'); hold on;
% xp = linspace(0,1,100);
% plot(xp,sin(pi*xp),'r');
title('initial condition')
pause
hold off

% solve using matrix exponential 
U0 = [zeros(N+1,1);u];
O = zeros(N+1);
A = [O -eye(N+1);
     M\K O];
 
 uMat = [];
 tVec = 0:.015:2;
for t = tVec
    U = expm(-A*t)*U0;
    u = U(N+2:end);
    plot([0;x(:)],[0;u],'.-');    
    
    uMat = [uMat; [0;u]'];
    axis([0 1 -.1 .1])
    drawnow
    
%     drawnow
end

% [X T] = meshgrid([0;x(:);1],tVec);
surf([0;x(:)],tVec,uMat)
shading interp